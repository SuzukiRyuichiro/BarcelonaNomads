@using BarcelonaNomads.Data
@model BarcelonaNomads.Models.Location

@{
    ViewData["Title"] = @Model.Name + " - Details";

    LocationType locationType = Model.LocationType;
    string Emoji;

    switch (locationType)
    {
        case LocationType.Cafe:
            Emoji = "‚òïÔ∏è";
            break;
        case LocationType.CoworkingSpace:
            Emoji = "üë©‚Äçüíª";
            break;
        case LocationType.Library:
            Emoji = "üìö";
            break;
        default:
            Emoji = "üè†";
            break;

    }
}


<div class="row justify-content-center">
    <div class="col-12 col-md-8 col-lg-6 col-sm-10">
        <div class="d-flex justify-content-between align-items-center">
            <h1>@Emoji @Model.Name</h1>
            <h3><a asp-action="Edit" asp-route-id="@Model.Id"><i class="bi bi-pencil-square"></i></a></h3>
        </div>
        <p><i class="bi bi-pin-map"></i> @Html.DisplayFor(model => model.Address)</p>
    </div>
</div>
<div class="row justify-content-center">
    <div class="col-12 col-md-8 col-lg-6 col-sm-10 position-relative">
        <div class="rounded overflow-hidden ratio ratio-16x9">
            <img class="img-fluid object-fit-cover" src="@Model.ImageURL" alt="@Model.Name">
        </div>
    </div>
</div>
<div class="row justify-content-center">
    <div class="col-12 col-md-8 col-lg-6 col-sm-10 mt-3">
        @foreach (var item in @Model.Reviews)
        {
            <div class="pt-1">
                <p><i class="bi bi-chat-dots"></i> @item.Content</p>
            </div>
            <hr />
        }
    </div>
</div>

<div class="row mt-3 justify-content-center">
    <div class="col-12 col-md-8 col-lg-6 col-sm-10 overflow-hidden">
        <h3>Where is it??</h3>
        <div id='map' class=" rounded-2" style='width: 100%; height: 300px;'></div>
        <script>
            mapboxgl.accessToken = 'pk.eyJ1Ijoic2Nvb3Rlci1zY29vdGVyIiwiYSI6ImNra3J2Z2ozZTBmNDczMXA2MzVvdXdrOHkifQ.RiTFrooZyY_30oinadpaxw';
            const map = new mapboxgl.Map({
                container: 'map', // container ID
                style: 'mapbox://styles/mapbox/streets-v11', // style URL
                center: [2.1686, 41.3874], // starting position [lng, lat]
                zoom: 13, // starting zoom
                projection: 'globe' // display the map as a 3D globe
            });
            map.on('style.load', () => {
                map.setFog({}); // Set the default atmosphere style
            });

            map.addControl(new mapboxgl.NavigationControl());

            map.flyTo({
                zoom: 16,
                center: [@Model.Longitude, @Model.Latitude],
                essential: true // this animation is considered essential with respect to prefers-reduced-motion
            });

            // Create a new marker.
            const marker = new mapboxgl.Marker()
                .setLngLat([@Model.Longitude, @Model.Latitude])
                .addTo(map);
        </script>
    </div>
</div>
