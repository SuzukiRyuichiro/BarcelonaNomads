@model IEnumerable<BarcelonaNomads.Models.Location>

@{
    ViewData["Title"] = "All locations";
}
<div class="row">
    <div class="col overflow-hidden">
        <div id='map' class=" rounded-2" style='width: 100%; height: 300px;'></div>
    </div>
</div>
@* Filter buttons *@
<div class="row mt-3">
    <div class="col d-flex">
        <div>
            <input type="checkbox" class="btn-check" id="cafe" autocomplete="off">
            <label class="btn btn-outline-success" for="cafe">☕️ Cafe</label>
        </div>
        <div class="ms-2">
            <input type="checkbox" class="btn-check" id="coworking-space" autocomplete="off">
            <label class="btn btn-outline-success" for="coworking-space">👩‍💻 Coworking Space</label>
        </div>
        <div class="ms-2">
            <input type="checkbox" class="btn-check" id="library" autocomplete="off">
            <label class="btn btn-outline-success" for="library">📚 Library</label>
        </div>
    </div>
</div>
@* Location cards *@
<div class="row g-2 mt-3">
    @foreach (var item in Model)
    {
        @await Html.PartialAsync("./Components/_Card.cshtml", item)
        ;
    }
</div>

@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        <script>
            mapboxgl.accessToken = 'pk.eyJ1Ijoic2Nvb3Rlci1zY29vdGVyIiwiYSI6ImNra3J2Z2ozZTBmNDczMXA2MzVvdXdrOHkifQ.RiTFrooZyY_30oinadpaxw';
            const map = new mapboxgl.Map({
                container: 'map', // container ID
                style: 'mapbox://styles/mapbox/streets-v11', // style URL
                center: [2.1686, 41.3874], // starting position [lng, lat]
                zoom: 11, // starting zoom
            });

            map.on('style.load', () => {
                map.setFog({}); // Set the default atmosphere style
            });
            // Add zoom and rotation controls to the map.
            map.addControl(new mapboxgl.NavigationControl());

            // add geolocation controll
            map.addControl(new mapboxgl.GeolocateControl({
                positionOptions: {
                    enableHighAccuracy: true
                },
                trackUserLocation: true,
                showUserHeading: true
            }));

            // add markers
            const cards = document.querySelectorAll('[data-target="location-card"]');
            console.log(cards);
            cards.forEach(card => {
                console.log(card.dataset);
                const marker = new mapboxgl.Marker()
                    .setLngLat([card.dataset.lng, card.dataset.lat])
                    .addTo(map);
            });
        </script>
}
